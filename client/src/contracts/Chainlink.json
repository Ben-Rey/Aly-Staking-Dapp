{
  "contractName": "Chainlink",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "name": "setAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"* Network: Kovan Aggregator: BNB/USD Address: 0x8993ED705cdf5e84D0a3B754b5Ee0e1783fcdF16 \"},\"getLatestPrice()\":{\"notice\":\"* Returns the latest price \"},\"setAddr(address)\":{\"notice\":\"Si on veut pouvoir set l'addresse d'une autre pair sur chainlink. A tester! \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Chainlink.sol\":\"Chainlink\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Chainlink.sol\":{\"keccak256\":\"0x897857733810601561be46834c31f155cd10464d0175f2bb82a8323ab1cf8ee5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d935a97fff52c780d0d8816b18efcbc19494e93c3000df1aec5936371f407f3\",\"dweb:/ipfs/QmVhdeXovhLfFTMQrRGptqdKfDR85pjy8Chq24Gbb4QryU\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50738993ed705cdf5e84d0a3b754b5ee0e1783fcdf166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610370806100746000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b578063d1d80fdf14610059575b600080fd5b610043610075565b6040516100509190610170565b60405180910390f35b610073600480360381019061006e91906101ee565b610114565b005b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010791906102bf565b5050509150508091505090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b61016a81610157565b82525050565b60006020820190506101856000830184610161565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101bb82610190565b9050919050565b6101cb816101b0565b81146101d657600080fd5b50565b6000813590506101e8816101c2565b92915050565b6000602082840312156102045761020361018b565b5b6000610212848285016101d9565b91505092915050565b600069ffffffffffffffffffff82169050919050565b61023a8161021b565b811461024557600080fd5b50565b60008151905061025781610231565b92915050565b61026681610157565b811461027157600080fd5b50565b6000815190506102838161025d565b92915050565b6000819050919050565b61029c81610289565b81146102a757600080fd5b50565b6000815190506102b981610293565b92915050565b600080600080600060a086880312156102db576102da61018b565b5b60006102e988828901610248565b95505060206102fa88828901610274565b945050604061030b888289016102aa565b935050606061031c888289016102aa565b925050608061032d88828901610248565b915050929550929590935056fea2646970667358221220f2e5085b58f2b7a7cee2d39d496a2bdd5f2e5f81b4f59b93821b001c996f823b64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80638e15f4731461003b578063d1d80fdf14610059575b600080fd5b610043610075565b6040516100509190610170565b60405180910390f35b610073600480360381019061006e91906101ee565b610114565b005b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156100e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010791906102bf565b5050509150508091505090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b61016a81610157565b82525050565b60006020820190506101856000830184610161565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101bb82610190565b9050919050565b6101cb816101b0565b81146101d657600080fd5b50565b6000813590506101e8816101c2565b92915050565b6000602082840312156102045761020361018b565b5b6000610212848285016101d9565b91505092915050565b600069ffffffffffffffffffff82169050919050565b61023a8161021b565b811461024557600080fd5b50565b60008151905061025781610231565b92915050565b61026681610157565b811461027157600080fd5b50565b6000815190506102838161025d565b92915050565b6000819050919050565b61029c81610289565b81146102a757600080fd5b50565b6000815190506102b981610293565b92915050565b600080600080600060a086880312156102db576102da61018b565b5b60006102e988828901610248565b95505060206102fa88828901610274565b945050604061030b888289016102aa565b935050606061031c888289016102aa565b925050608061032d88828901610248565b915050929550929590935056fea2646970667358221220f2e5085b58f2b7a7cee2d39d496a2bdd5f2e5f81b4f59b93821b001c996f823b64736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3594:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "51:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "61:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "72:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "61:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "43:7:7",
                "type": ""
              }
            ],
            "src": "7:76:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "152:52:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "169:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "191:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "174:16:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "174:23:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "162:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:36:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "162:36:7"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "140:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "147:3:7",
                "type": ""
              }
            ],
            "src": "89:115:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:122:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "316:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "328:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "339:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "316:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "352:41:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:69:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "352:69:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "278:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "290:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "301:4:7",
                "type": ""
              }
            ],
            "src": "210:218:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "484:19:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "494:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "484:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "467:6:7",
                "type": ""
              }
            ],
            "src": "434:75:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "621:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "614:12:7"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "515:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "737:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "737:12:7"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "638:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "806:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "816:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "831:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "838:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "827:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "827:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "816:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "788:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "798:7:7",
                "type": ""
              }
            ],
            "src": "761:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "938:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "948:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "977:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "959:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "948:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "920:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "930:7:7",
                "type": ""
              }
            ],
            "src": "893:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1038:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1095:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1104:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1107:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1097:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1097:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1097:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1061:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1086:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1068:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1068:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1058:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1058:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1051:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1048:63:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1031:5:7",
                "type": ""
              }
            ],
            "src": "995:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1175:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1185:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1207:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1194:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1185:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1250:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1223:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1223:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1153:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1161:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1169:5:7",
                "type": ""
              }
            ],
            "src": "1123:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1334:263:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1380:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1382:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1382:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1382:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1355:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1364:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1351:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1351:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1376:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1347:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1347:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1344:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1473:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1488:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1502:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1492:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1517:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1552:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1563:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1548:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1548:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1572:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1527:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1527:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1517:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1304:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1315:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1327:6:7",
                "type": ""
              }
            ],
            "src": "1268:329:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1647:61:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1657:45:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1672:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1679:22:7",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1668:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1668:34:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1657:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1629:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1639:7:7",
                "type": ""
              }
            ],
            "src": "1603:105:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1756:78:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1812:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1821:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1824:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1814:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1814:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1814:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1779:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1803:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "1786:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1786:23:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1776:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1776:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1769:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1769:42:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1766:62:7"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1749:5:7",
                "type": ""
              }
            ],
            "src": "1714:120:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1902:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1912:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1927:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1921:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1912:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1969:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "1943:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1943:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1943:32:7"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1880:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1888:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1896:5:7",
                "type": ""
              }
            ],
            "src": "1840:141:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2029:78:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2085:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2094:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2097:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2087:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2087:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2087:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2052:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2076:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "2059:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2059:23:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2049:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2042:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2042:42:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2039:62:7"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2022:5:7",
                "type": ""
              }
            ],
            "src": "1987:120:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2175:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2185:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2200:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2194:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2194:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2185:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2242:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "2216:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2216:32:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2216:32:7"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2153:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2161:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2169:5:7",
                "type": ""
              }
            ],
            "src": "2113:141:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2305:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2315:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2326:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2315:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2287:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2297:7:7",
                "type": ""
              }
            ],
            "src": "2260:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2386:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2443:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2452:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2455:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2445:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2445:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2445:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2409:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2434:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2416:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2416:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2406:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2406:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2399:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2399:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2396:63:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2379:5:7",
                "type": ""
              }
            ],
            "src": "2343:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2534:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2544:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2559:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2553:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2553:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2544:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2602:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2575:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2575:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2575:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2512:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2520:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2528:5:7",
                "type": ""
              }
            ],
            "src": "2471:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2762:829:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2809:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2811:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2811:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2811:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2783:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2792:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2779:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2779:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2804:3:7",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2775:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2775:33:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2772:120:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2902:127:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2917:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2931:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2921:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2946:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2991:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3002:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2987:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2987:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3011:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2956:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2956:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2946:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3039:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3054:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3068:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3058:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3084:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3129:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3140:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3125:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3125:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3149:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3094:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3094:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3084:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3177:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3192:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3206:2:7",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3196:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3222:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3268:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3279:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3264:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3264:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3288:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3232:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3232:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3222:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3316:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3331:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3345:2:7",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3335:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3361:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3407:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3418:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3403:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3403:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3427:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3371:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3371:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3361:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3455:129:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3470:17:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3484:3:7",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3474:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3501:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3546:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3557:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3542:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3542:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3566:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3511:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3511:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3501:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2700:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2711:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2723:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2731:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2739:6:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2747:6:7",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2755:6:7",
                "type": ""
              }
            ],
            "src": "2620:971:7"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "151:851:0:-:0;;;337:130;;;;;;;;;;408:42;361:9;;:99;;;;;;;;;;;;;;;;;;151:851;;;;;;",
  "deployedSourceMap": "151:851:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:300;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;560:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;700:300;747:6;824:12;944:9;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;765:206;;;;;;988:5;981:12;;;700:300;:::o;560:96::-;643:5;609:9;;:40;;;;;;;;;;;;;;;;;;560:96;:::o;7:76:7:-;43:7;72:5;61:16;;7:76;;;:::o;89:115::-;174:23;191:5;174:23;:::i;:::-;169:3;162:36;89:115;;:::o;210:218::-;301:4;339:2;328:9;324:18;316:26;;352:69;418:1;407:9;403:17;394:6;352:69;:::i;:::-;210:218;;;;:::o;515:117::-;624:1;621;614:12;761:126;798:7;838:42;831:5;827:54;816:65;;761:126;;;:::o;893:96::-;930:7;959:24;977:5;959:24;:::i;:::-;948:35;;893:96;;;:::o;995:122::-;1068:24;1086:5;1068:24;:::i;:::-;1061:5;1058:35;1048:63;;1107:1;1104;1097:12;1048:63;995:122;:::o;1123:139::-;1169:5;1207:6;1194:20;1185:29;;1223:33;1250:5;1223:33;:::i;:::-;1123:139;;;;:::o;1268:329::-;1327:6;1376:2;1364:9;1355:7;1351:23;1347:32;1344:119;;;1382:79;;:::i;:::-;1344:119;1502:1;1527:53;1572:7;1563:6;1552:9;1548:22;1527:53;:::i;:::-;1517:63;;1473:117;1268:329;;;;:::o;1603:105::-;1639:7;1679:22;1672:5;1668:34;1657:45;;1603:105;;;:::o;1714:120::-;1786:23;1803:5;1786:23;:::i;:::-;1779:5;1776:34;1766:62;;1824:1;1821;1814:12;1766:62;1714:120;:::o;1840:141::-;1896:5;1927:6;1921:13;1912:22;;1943:32;1969:5;1943:32;:::i;:::-;1840:141;;;;:::o;1987:120::-;2059:23;2076:5;2059:23;:::i;:::-;2052:5;2049:34;2039:62;;2097:1;2094;2087:12;2039:62;1987:120;:::o;2113:141::-;2169:5;2200:6;2194:13;2185:22;;2216:32;2242:5;2216:32;:::i;:::-;2113:141;;;;:::o;2260:77::-;2297:7;2326:5;2315:16;;2260:77;;;:::o;2343:122::-;2416:24;2434:5;2416:24;:::i;:::-;2409:5;2406:35;2396:63;;2455:1;2452;2445:12;2396:63;2343:122;:::o;2471:143::-;2528:5;2559:6;2553:13;2544:22;;2575:33;2602:5;2575:33;:::i;:::-;2471:143;;;;:::o;2620:971::-;2723:6;2731;2739;2747;2755;2804:3;2792:9;2783:7;2779:23;2775:33;2772:120;;;2811:79;;:::i;:::-;2772:120;2931:1;2956:63;3011:7;3002:6;2991:9;2987:22;2956:63;:::i;:::-;2946:73;;2902:127;3068:2;3094:63;3149:7;3140:6;3129:9;3125:22;3094:63;:::i;:::-;3084:73;;3039:128;3206:2;3232:64;3288:7;3279:6;3268:9;3264:22;3232:64;:::i;:::-;3222:74;;3177:129;3345:2;3371:64;3427:7;3418:6;3407:9;3403:22;3371:64;:::i;:::-;3361:74;;3316:129;3484:3;3511:63;3566:7;3557:6;3546:9;3542:22;3511:63;:::i;:::-;3501:73;;3455:129;2620:971;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.14;\nimport \"../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract Chainlink {\n    AggregatorV3Interface internal priceFeed;\n\n    /** * Network: Kovan\n     * Aggregator: BNB/USD\n     * Address: 0x8993ED705cdf5e84D0a3B754b5Ee0e1783fcdF16 */\n    constructor() {\n        priceFeed = AggregatorV3Interface(\n            0x8993ED705cdf5e84D0a3B754b5Ee0e1783fcdF16\n        );\n    }\n\n    /**Si on veut pouvoir set l'addresse d'une autre pair sur chainlink. A tester! */\n\n    function setAddr(address _pair) public {\n        priceFeed = AggregatorV3Interface(_pair);\n    }\n\n    /** * Returns the latest price */\n    function getLatestPrice() public view returns (int256) {\n        (\n            ,\n            /*uint80 roundID*/\n            int256 price, /*uint startedAt*/ /*uint timeStamp*/ /*uint80\nansweredInRound*/\n            ,\n            ,\n\n        ) = priceFeed.latestRoundData();\n        return price;\n    }\n}\n",
  "sourcePath": "/home/xav888/Alyra/Alyra-project4-deFi-dApp/truffle/contracts/Chainlink.sol",
  "ast": {
    "absolutePath": "project:/contracts/Chainlink.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        283
      ],
      "Chainlink": [
        45
      ]
    },
    "id": 46,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 46,
        "sourceUnit": 284,
        "src": "57:92:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Chainlink",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 45,
        "linearizedBaseContracts": [
          45
        ],
        "name": "Chainlink",
        "nameLocation": "160:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "207:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 45,
            "src": "176:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 283,
                "src": "176:21:0"
              },
              "referencedDeclaration": 283,
              "src": "176:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "351:116:0",
              "statements": [
                {
                  "expression": {
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "361:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307838393933454437303563646635653834443061334237353462354565306531373833666364463136",
                          "id": 11,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "408:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x8993ED705cdf5e84D0a3B754b5Ee0e1783fcdF16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "373:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$283_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "373:87:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "361:99:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "361:99:0"
                }
              ]
            },
            "documentation": {
              "id": 6,
              "nodeType": "StructuredDocumentation",
              "src": "223:109:0",
              "text": "* Network: Kovan\n Aggregator: BNB/USD\n Address: 0x8993ED705cdf5e84D0a3B754b5Ee0e1783fcdF16 "
            },
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "351:0:0"
            },
            "scope": 45,
            "src": "337:130:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "599:57:0",
              "statements": [
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "609:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "643:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "621:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$283_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "621:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "609:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "609:40:0"
                }
              ]
            },
            "documentation": {
              "id": 17,
              "nodeType": "StructuredDocumentation",
              "src": "473:81:0",
              "text": "Si on veut pouvoir set l'addresse d'une autre pair sur chainlink. A tester! "
            },
            "functionSelector": "d1d80fdf",
            "id": 29,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAddr",
            "nameLocation": "569:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "585:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "577:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "576:15:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:0"
            },
            "scope": 45,
            "src": "560:96:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "755:245:0",
              "statements": [
                {
                  "assignments": [
                    null,
                    36,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 36,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "831:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "824:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 35,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "824:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 40,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "944:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 282,
                      "src": "944:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "944:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "765:206:0"
                },
                {
                  "expression": {
                    "id": 41,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "988:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 34,
                  "id": 42,
                  "nodeType": "Return",
                  "src": "981:12:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "662:33:0",
              "text": "* Returns the latest price "
            },
            "functionSelector": "8e15f473",
            "id": 44,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "709:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "723:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "747:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:8:0"
            },
            "scope": 45,
            "src": "700:300:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 46,
        "src": "151:851:0",
        "usedErrors": []
      }
    ],
    "src": "33:970:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Chainlink.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        283
      ],
      "Chainlink": [
        45
      ]
    },
    "id": 46,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 46,
        "sourceUnit": 284,
        "src": "57:92:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Chainlink",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 45,
        "linearizedBaseContracts": [
          45
        ],
        "name": "Chainlink",
        "nameLocation": "160:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "207:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 45,
            "src": "176:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 283,
                "src": "176:21:0"
              },
              "referencedDeclaration": 283,
              "src": "176:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "351:116:0",
              "statements": [
                {
                  "expression": {
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "361:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307838393933454437303563646635653834443061334237353462354565306531373833666364463136",
                          "id": 11,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "408:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x8993ED705cdf5e84D0a3B754b5Ee0e1783fcdF16"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "373:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$283_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "373:87:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "361:99:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "361:99:0"
                }
              ]
            },
            "documentation": {
              "id": 6,
              "nodeType": "StructuredDocumentation",
              "src": "223:109:0",
              "text": "* Network: Kovan\n Aggregator: BNB/USD\n Address: 0x8993ED705cdf5e84D0a3B754b5Ee0e1783fcdF16 "
            },
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "351:0:0"
            },
            "scope": 45,
            "src": "337:130:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "599:57:0",
              "statements": [
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "609:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "643:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "621:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$283_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "621:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "609:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "609:40:0"
                }
              ]
            },
            "documentation": {
              "id": 17,
              "nodeType": "StructuredDocumentation",
              "src": "473:81:0",
              "text": "Si on veut pouvoir set l'addresse d'une autre pair sur chainlink. A tester! "
            },
            "functionSelector": "d1d80fdf",
            "id": 29,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAddr",
            "nameLocation": "569:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "585:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "577:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "576:15:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:0"
            },
            "scope": 45,
            "src": "560:96:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "755:245:0",
              "statements": [
                {
                  "assignments": [
                    null,
                    36,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 36,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "831:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 43,
                      "src": "824:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 35,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "824:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 40,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "944:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$283",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 282,
                      "src": "944:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "944:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "765:206:0"
                },
                {
                  "expression": {
                    "id": 41,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "988:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 34,
                  "id": 42,
                  "nodeType": "Return",
                  "src": "981:12:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "662:33:0",
              "text": "* Returns the latest price "
            },
            "functionSelector": "8e15f473",
            "id": 44,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nameLocation": "709:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "723:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "747:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:8:0"
            },
            "scope": 45,
            "src": "700:300:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 46,
        "src": "151:851:0",
        "usedErrors": []
      }
    ],
    "src": "33:970:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0xA0c1d23867b510faF5e7700eEC2E13829C130491",
      "transactionHash": "0x626ed51bc199d1913b3c847c2f50640914b22055e721a95e5ff05b06d9822731"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-07-23T21:35:20.345Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "* Network: Kovan Aggregator: BNB/USD Address: 0x8993ED705cdf5e84D0a3B754b5Ee0e1783fcdF16 "
      },
      "getLatestPrice()": {
        "notice": "* Returns the latest price "
      },
      "setAddr(address)": {
        "notice": "Si on veut pouvoir set l'addresse d'une autre pair sur chainlink. A tester! "
      }
    },
    "version": 1
  }
}